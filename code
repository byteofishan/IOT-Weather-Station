#include <WiFi.h>

#include <HTTPClient.h>
#include <ArduinoJson.h>
#include "DHT.h"
#include <Firebase_ESP_Client.h>

// DHT11 setup
#define DHTPIN 4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// Wi-Fi and Firebase setup
const char* ssid = "your ssid";
const char* password = "your password";
#define DATABASE_URL "your url "
#define DATABASE_SECRET "your secret"

FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;

// OpenWeatherMap setup
const String API_KEY = "your key";
const String CITY = "your city";
const String COUNTRY = "IN";

// Function to fetch weather data
bool getWeather( int &api_hum, int &pressure, String &description, float &wind, int &clouds, long &timestamp) {
  HTTPClient http;
  String url = "http://api.openweathermap.org/data/2.5/weather?q=" + CITY + "," + COUNTRY + "&appid=" + API_KEY + "&units=metric";
  http.begin(url);
  int httpCode = http.GET();

  if (httpCode == 200) {
    String payload = http.getString();
    StaticJsonDocument<1024> doc;
    deserializeJson(doc, payload);

    
    api_hum = doc["main"]["humidity"];
    pressure = doc["main"]["pressure"];
    description = doc["weather"][0]["description"].as<String>();
    wind = doc["wind"]["speed"];
    clouds = doc["clouds"]["all"];
    timestamp = doc["dt"];

    http.end();
    return true;
  } else {
    Serial.println("Failed to fetch API data: " + String(httpCode));
    http.end();
    return false;
  }
}

void setup() {
  Serial.begin(115200);
  dht.begin();

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to Wi-Fi...");
  }
  Serial.println(" Wi-Fi connected");

  config.database_url = DATABASE_URL;
  config.signer.tokens.legacy_token = DATABASE_SECRET;
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}

void loop() {
  float local_temp = dht.readTemperature();
  float local_hum = dht.readHumidity();

  if (isnan(local_temp) || isnan(local_hum)) {
    Serial.println(" DHT11 read failed");
    delay(5000);
    return;
  }

  float wind_speed;
  int api_hum, pressure, clouds;
  String description;
  long timestamp;

  if (getWeather(api_hum, pressure, description, wind_speed, clouds, timestamp)) {
    Serial.println(" OpenWeatherMap data fetched");
    Serial.println("Uploading to Firebase...");

    Firebase.RTDB.setFloat(&fbdo, "/weather/local_temp", local_temp);
    Firebase.RTDB.setFloat(&fbdo, "/weather/local_humidity", local_hum);
   
    Firebase.RTDB.setInt(&fbdo, "/weather/api_humidity", api_hum);
    Firebase.RTDB.setInt(&fbdo, "/weather/pressure", pressure);
    Firebase.RTDB.setString(&fbdo, "/weather/weather_description", description);
    Firebase.RTDB.setFloat(&fbdo, "/weather/wind_speed", wind_speed);
    Firebase.RTDB.setInt(&fbdo, "/weather/clouds", clouds);
    Firebase.RTDB.setInt(&fbdo, "/weather/timestamp", timestamp);

    Serial.println(" Data uploaded to Firebase");
  }
  delay(60000); // 
}
